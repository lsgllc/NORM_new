package asm.gov.state.tx.dmv.uom.common.person;
import java.util.*;
import org.objectweb.asm.*;
import org.objectweb.asm.attrs.*;
public class IPersonNativeDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter cw = new ClassWriter(0);
FieldVisitor fv;
MethodVisitor mv;
AnnotationVisitor av0;

cw.visit(V1_5, ACC_PUBLIC + ACC_ABSTRACT + ACC_INTERFACE, "gov/state/tx/dmv/uom/common/person/IPersonNative", "<T:Lgov/state/tx/dmv/uom/common/person/PERSON_TYPE;>Ljava/lang/Object;Lcom/lsgllc/norm/client/persistence/INormPersistable;", "java/lang/Object", new String[] { "com/lsgllc/norm/client/persistence/INormPersistable" });

{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getType", "()Lgov/state/tx/dmv/uom/common/person/PERSON_TYPE;", "()TT;", new String[] { "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setType", "(Lgov/state/tx/dmv/uom/common/person/PERSON_TYPE;)V", "(TT;)V", null);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getFirstName", "()Ljava/lang/String;", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setFirstName", "(Ljava/lang/String;)V", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getMiddleName", "()Ljava/lang/String;", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setMiddleName", "(Ljava/lang/String;)V", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getLastName", "()Ljava/lang/String;", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setLastName", "(Ljava/lang/String;)V", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getSalutation", "()Ljava/lang/String;", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setSalutation", "(Ljava/lang/String;)V", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getNameSuffix", "()Ljava/lang/String;", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setNameSuffix", "(Ljava/lang/String;)V", null, new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getKnownAddresses", "()Ljava/util/Set;", "()Ljava/util/Set<Ljava/util/HashMap<Lgov/state/tx/dmv/uom/common/contact/IContactInformation;Ljava/util/List<Ljava/lang/String;>;>;>;", new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "setKnownAddresses", "(Ljava/util/Set;)V", "(Ljava/util/Set<Ljava/util/HashMap<Lgov/state/tx/dmv/uom/common/contact/IContactInformation;Ljava/util/List<Ljava/lang/String;>;>;>;)V", new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_ABSTRACT, "getAllVehicles", "()Ljava/util/List;", "()Ljava/util/List<Lgov/state/tx/dmv/uom/common/vehicle/IVehicle;>;", new String[] { "gov/state/tx/dmv/uom/exceptions/UOMSpecifiedException", "gov/state/tx/dmv/uom/exceptions/StrangeAndWonderfulException", "com/lsgllc/norm/util/exceptions/NormNotFoundException" });
mv.visitEnd();
}
